name: Terraform Deploy with Slack Approval

on:
  workflow_dispatch:

jobs:
  eks:
    name: Deploy EKS Cluster
    runs-on: ubuntu-latest
    environment:
      name: eks-approval   # ðŸ‘ˆ Requires approval in GitHub Environments
    defaults:
      run:
        working-directory: terraform/EKS
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan | tee plan.txt

      - name: Capture terraform plan
        id: plan
        run: |
            echo "PLAN_OUTPUT<<EOF" >> $GITHUB_ENV
            tail plan.txt >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

      - name: Send Plan to Slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            *Terraform Plan for EKS*
            ```
            ${{ env.PLAN_OUTPUT }}
            
            ```
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  k8s:
    name: Deploy K8s Addons
    runs-on: ubuntu-latest
    needs: eks
    environment:
      name: k8s-approval
    defaults:
      run:
        working-directory: terraform/k8s
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: terraform init
      - run: terraform validate
      - run: terraform plan -out=tfplan | tee plan.txt

      - name: Capture terraform plan
        id: plan
        run: |
            echo "PLAN_OUTPUT<<EOF" >> $GITHUB_ENV
            tail plan.txt >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
      - name: Send Plan to Slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            *Terraform Plan for K8s Addons*
            ```
            ${{ env.PLAN_OUTPUT }}
            ```
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - run: terraform apply -auto-approve tfplan

  karpenter:
    name: Deploy Karpenter
    runs-on: ubuntu-latest
    needs: k8s
    environment:
      name: karpenter-approval
    defaults:
      run:
        working-directory: terraform/karpenter_manifests
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Configure kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - run: terraform init
      - run: terraform validate
      - run: terraform plan -out=tfplan | tee plan.txt

      - name: Capture terraform plan
        id: plan
        run: |
            echo "PLAN_OUTPUT<<EOF" >> $GITHUB_ENV
            tail plan.txt >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
      - name: Send Plan to Slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: |
            *Terraform Plan for Karpenter*
            ```
            ${{ env.PLAN_OUTPUT }}
            ```
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - run: terraform apply -auto-approve tfplan
